plugins {
    id "com.google.protobuf" version "0.9.2"
    id 'java'
    id "application"
}

group 'com.gitlab.techschool'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.22.2'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.22.2'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    implementation group: 'io.grpc', name: 'grpc-all', version: '1.54.0'

    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.22.2'
    }
    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you don't locate it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.54.0'
            // or
            // path = 'tools/protoc-gen-grpc-java'
        }
        // Any other plugins
    }

    generateProtoTasks {
        all()*.plugins {
            grpc{}
        }
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/protobuf'
            srcDir 'src/main/protocolbuffers'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodevel'
        }
        java {
            srcDir 'build/generated/source/proto/main/grpc'
            srcDir 'build/generated/source/proto/main/java'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/protocolbuffers'
        }
    }
}

test {
    useJUnitPlatform()
}

task runWithJavaExec(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
}

application {
    mainClassName = project.findProperty("chooseMain").toString()
//    mainClassName = "pcbook.serializer.Serializer"
//    mainClassName = "pcbook.sample.Generator"
//    mainClassName = "pcbook.service.LaptopClient"
//    mainClassName = "pcbook.service.LaptopServer"
}

// ./gradlew run -Pchoosemain='pcbook.sample.Generator'